<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DocBook V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<reference>
<title>SSSD manualsidor</title>
<refentry>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="include/upstream.xml" />

    <refmeta>
        <refentrytitle>sssd-secrets</refentrytitle>
        <manvolnum>5</manvolnum>
        <refmiscinfo class="manual">Filformat och konventioner</refmiscinfo>
    </refmeta>

    <refnamediv id='name'>
        <refname>sssd-secrets</refname>
        <refpurpose>SSSD Secrets-respondent</refpurpose>
    </refnamediv>

    <refsect1 id='description'>
        <title>BESKRIVNING</title>
        <para>
            Denna manualsida besriver konfigurationen av Secrets-respondenten till
<citerefentry> <refentrytitle>sssd</refentrytitle> <manvolnum>8</manvolnum>
</citerefentry>.  För en detaljerad referens om syntaxen, se avsnittet
<quote>FILFORMAT</quote> i manualsidan <citerefentry>
<refentrytitle>sssd.conf</refentrytitle> <manvolnum>5</manvolnum>
</citerefentry>.
        </para>
        <para>
             Många system och användarprogram behöver lagra privat information såsom
lösenord eller tjänstenycklar och har inget bra sätt att ta hand om dem
ordentligt.  Den enkla vägen är att bädda in dessa
<quote>hemligheter</quote> i konfigurationsfiler där de potentiellt kan
komma att exponera känslig nyckelinformation till säkerhetskopior,
konfigurationshanteringssystem och gör det i allmänhet svårare att säkra
datan.
         </para>
         <para>
             Projektet <ulink url="https://github.com/latchset/custodia">custodia</ulink>
föddes för att ta hand om detta problem i molnlika miljöer, men vi tyckte
att idén var övertygande även på nivån av enstaka system.  Som en
säkerhetstjänst är SSSD ideal för att hantera denna funktionalitet och och
samtidigt erbjuda samma API via ett UNIX-uttag.  Detta kommer göra det
möjligt att använda lokala anrop och få dem dirigerade transparent till ett
lokalt eller fjärran nyckelhanteringslager såsom IPA Vault för lagring,
deponering och återhämtning.
         </para>
         <para>
             Hemligheterna är enkla nyckel-värde-par.  Varje användares hemligheter
ligger i en namnrymd efter deras användar-ID, vilket betyder att hemligheter
aldrig kommer kollidera mellan användare.  Hemligheter kan lagras inuti
<quote>behållare</quote> som kan nästas.
         </para>
         <para>
             Eftersom secrets-respondenten kan användas både externt för att lagra
allmänna hemligheter, såsom beskrives i resten av den här manualsidan, men
också intern av andra SSSD-komponenter för att lagra deras material kan
några konfigurationsalternativ, som kvoter konfigureras per
<quote>svärm</quote> i ett konfigurationsavsnitt namngivet efter svärmen.
De svärmar som stödjs för närvarande är: <variablelist>
                 <varlistentry>
                     <term>secrets</term>
                     <listitem><para>hemligheter för allmän användning</para></listitem>
                 </varlistentry>
                 <varlistentry>
                     <term>kcm</term>
                     <listitem>
                             <para>används av tjänsten <citerefentry> <refentrytitle>sssd-kcm</refentrytitle>
<manvolnum>8</manvolnum> </citerefentry>.
                            </para>
                    </listitem>
                 </varlistentry>
             </variablelist>
         </para>
    </refsect1>

    <refsect1 id='usage'>
        <title>ANVÄNDA SECRETS-REPONDENTEN</title>
        <para>
            UNIX-uttaget SSSD-responenten lyssnar på finns på
<filename>/var/run/secrets.socket</filename>.
        </para>
        <para>
            Secrets-respondenten är uttagsaktiverad av <citerefentry>
<refentrytitle>systemd</refentrytitle> <manvolnum>1</manvolnum>
</citerefentry>.  Till skillnad mot andra SSSD-respondedenter, den kan inte
startas genom att lägga till strängen <quote>secrets</quote> till direktivet
<quote>service</quote>.  Systemd-uttagsenheten heter
<quote>sssd-secrets.socket</quote> och den motsvarande tjänstefilen heter
<quote>sssd-secrets.service</quote>.  För att tjänsten skall vara
uttagsaktiverad, se till att uttaget är aktiverat och aktivt och att
tjänsten är aktiverad: <programlisting>
systemctl start sssd-secrets.socket
systemctl enable sssd-secrets.socket
systemctl enable sssd-secrets.service
            </programlisting>
Pbservera att dom dostrobitopm redan kan ha konfigurerat enheterna åt dig.
        </para>
    </refsect1>

    <refsect1 id='options'>
        <title>KONFIGURATIONSALTERNATIV</title>
        <para>
            De allmänna alternativen för SSSD-respondenter såsom
<quote>debug_level</quote> eller <quote>fd_limit</quote> accepteras av
secrets-respondenten.  Se manualsidan <citerefentry>
<refentrytitle>sssd.conf</refentrytitle> <manvolnum>5</manvolnum>
</citerefentry> för en fullständig lista.  Dessutom finns det några
secrets-specifika alternativ också.
        </para>
        <para>
            Secrets-respondenten är konfigurerad i ett global avsnitt
<quote>[secrets]</quote> och ett valfritt avsnitt per användare
<quote>[secrets/users/$uid]</quote> i
<filename>sssd.conf</filename>. Observera att några alternativ, speciellt
leverantörstypen, bara kan anges i underavsnitt per användare.
        </para>
        <variablelist>
            <varlistentry>
                <term>provider (sträng)</term>
                <listitem>
                <para>
                    Alternativet anger var hemligheterna skall sparas.  Secrets-respondenten kan
konfigurera ett underavsnitt per användare
(t.ex. <quote>[secrets/users/123]</quote> – se slutet av denna manualsida
för ett fullständigt exempel som använder Custodia för en viss användare)
som definierar vilken leverantör som sparar hemligheterna för denna
specifika användare.  Underavsnittet per användare skall innehålla alla
alternativ för den användarens leverantör.  Observera att för närvarande är
alltid den globala leverantören lokal, proxy-leverantören kan endast anges i
ett avsnitt per användare.  Följande leverantörer stödjs: <variablelist>
                        <varlistentry>
                            <term>local</term>
                            <listitem>
                                <para>
                                    Hemligheterna sparas i en lokal databas, krypterad i vila med en
huvudnyckel.  Den lokal leverantören har inte några ytterligare
konfigurationsalternativ för tillfället.
                                </para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>proxy</term>
                            <listitem>
                                <para>
                                    Secrets-respondenten vidarebefordrar begäranden till en Custodia-server.
Proxy-leverantören stödjer flera ytterligare alternativ (se nedan).
                                </para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </para>
                <para>
                    Standard: local
                </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            Följande alternativ påverkar endast hemlighets-<quote>svärmen</quote> och
skall därför sättas i ett underavsnitt per svärm.  Att sätta alternativet
till 0 betyder ”obegränsat”.
        </para>
        <variablelist>
            <varlistentry>
                <term>containers_nest_level (heltal)</term>
                <listitem>
                <para>
                    Detta alternativ specificerar det maximala antalet tillåtna nästlade
behållare.
                </para>
                <para>
                    Standard: 4
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>max_secrets (heltal)</term>
                <listitem>
                <para>
                    Detta alternativ anger det maximala antalet hemligheter som kan sparas i
svärmen.
                </para>
                <para>
                    Standard: 1024 (secrets-svärm), 256 (kcm-svärm)
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>max_uid_secrets (heltal)</term>
                <listitem>
                <para>
                    Detta alternativ anger det maximala antalet hemligheter som kan sparas per
UID i svärmen.
                </para>
                <para>
                    Standard: 256 (secrets-svärm), 64 (kcm-svärm)
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>max_payload_size (heltal)</term>
                <listitem>
                <para>
                    Detta alternativ anger den maximala laststorleken som tillåts för en
hemlighetslast i kilobyte.
                </para>
                <para>
                    Standard: 16 (secrets-svärm), 65536 (64 MiB) (kcm-svärm)
                </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            Till exempel, för att justera kvoter olika för både svärmen
<quote>secrets</quote> och <quote>kcm</quote>, konfigurera följande:
<programlisting>
[secrets/secrets]
max_payload_size = 128

[secrets/kcm]
max_payload_size = 256
            </programlisting>
        </para>
        <para>
            Följande alternativ är endast användbara för konfigurationer som använder
leverantören <quote>proxy</quote>.
        </para>
        <variablelist>
            <varlistentry>
                <term>proxy_url (sträng)</term>
                <listitem>
                <para>
                    URL:en Custodia-servern lyssnar på.  För tillfället stödjs protokollen http
och https.
                </para>
                <para>
                    Formatet på URI:n måste stämma med formatet som definieras i RFC 2732:
                </para>
                <para>
                    http[s]://&lt;värd&gt;[:port]
                </para>
                <para>
                    Exempel: http://localhost:8080
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>auth_type (sträng)</term>
                <listitem>
                <para>
                    Metoden att använda vid autentisering mot en Custodia-server.  Följande
autentiseringsmetoder stödjs:
                </para>
                <variablelist>
                    <varlistentry>
                        <term>basic_auth</term>
                        <listitem>
                            <para>
                                Autentisera med ett användarnamn och lösenord som satts i alternativen
<quote>username</quote> och <quote>password</quote>.
                            </para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term>header</term>
                        <listitem>
                            <para>
                                Autentisera med ett HTTP-huvudvärde som det är definierat i
konfigurationsalternativen <quote>auth_header_name</quote> och
<quote>auth_header_value</quote>.
                            </para>
                        </listitem>
                    </varlistentry>
                </variablelist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>auth_header_name (sträng)</term>
                <listitem>
                <para>
                    Om satt kommer secrets-respondenten lägga in ett huvud med detta namn i
HTTP-begäranden med värdet som definieras i konfigurationsalternativet
<quote>auth_header_value</quote>.
                </para>
                <para>
                    Exempel: MITTHEMLIGANAMN
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>auth_header_value (sträng)</term>
                <listitem>
                <para>
                    Värdet sssd-secrets kommer använda till <quote>auth_header_name</quote>.
                </para>
                <para>
                    Exempel: minhemlighet
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>forward_headers (lista av strängar)</term>
                <listitem>
                <para>
                    Listan över HTTP-huvuden att vidarebefordra till Custodia-servern
tillsammans med begäran
                </para>
                <para>
                    Standard: inte satt
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>verify_peer (boolean)</term>
                <listitem>
                <para>
                    Huruvida motpartens certifikat skall verifieras och vara giltigt om
HTTPS-protokollet används med proxy-leverantören.
                </para>
                <para>
                    Standard: true
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>verify_host (boolean)</term>
                <listitem>
                <para>
                    Huruvida motpartens värdnamn måste stämma med värdnamnet i dess certifikat
om HTTPS-protokollet används med proxy-leverantören.
                </para>
                <para>
                    Standard: true
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>capath (sträng)</term>
                <listitem>
                <para>
                    Sökväg till katalogen som innehåller lagrade certifikatutfärdares
certifikat.  Systemets stanardsökväg används om detta alternativ inte är
satt.
                </para>
                <para>
                    Standard: inte satt
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>cacert (sträng)</term>
                <listitem>
                <para>
                    Sökväg till filen som innehåller serverns certifikatauktaritetscertifikat.
Om detta alternativ inte är satt, då slås CA:ns certifikat upp i
<quote>capath</quote>.
                </para>
                <para>
                    Standard: inte satt
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>cert (sträng)</term>
                <listitem>
                <para>
                    Sökväg till filen som innehåller klientens certifikat om det krävs av
servern.  Denna fil kan också innehålla en privat nyckel eller så kan den
privata nyckeln finnas i en separat fil som anges med <quote>key</quote>.
                </para>
                <para>
                    Standard: inte satt
                </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>key (sträng)</term>
                <listitem>
                <para>
                    Sökväg till filen som innehåller klientens privata nyckel.
                </para>
                <para>
                    Standard: inte satt
                </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsect1>
    <refsect1 id='restapi'>
        <title>ATT ANVÄNDA REST-API:ET</title>
        <para>
            Detta avsnitt listar tillgängliga kommandon och inkluderar exempel som
använder verktyget <citerefentry> <refentrytitle>curl</refentrytitle>
<manvolnum>1</manvolnum> </citerefentry>.  Alla begäranden av
proxy-leverantören måste sätta huvudet Content Type till
<quote>application/json</quote>.  Dessutom stödjer den lokala leverantören
även att Content Type sätts till <quote>application/octet-stream</quote>.
Hemligheter sparade med begäranden som sätter huvudet Content Type till
<quote>application/octet-stream</quote> base64-kodas när de lagras och
avkodas när de hämtas, så det är inte möjligt att lagra en hemlighet med en
Content Type och hämta med en annan.  URI:n för hemligheter måste börja med
<filename>/secrets/</filename>.
        </para>
            <variablelist>
                <varlistentry>
                    <term>Lista hemligheter</term>
                    <listitem>
                    <para>
                        För att lista de tillängliga hemligheterna, skicka en HTTP GET-begäran med
ett avslutande snedstreck tillagt på behållarsökvägen.
                    </para>
                    <para>
                        Exempel: <programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XGET http://localhost/secrets/
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Hämta en hemlighet</term>
                    <listitem>
                    <para>
                        För att läsa värdet på en enskild hemlighet, skicka en HTTP GET-begäran utan
ett avslutande snedstreck.  Den sista delen av URI:n är namnet på
hemligheten.
                    </para>
                    <para>
                        Exempel: <programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XGET http://localhost/secrets/apa
                        </programlisting> <programlisting>
curl -H "Content-Type: application/octet-stream" \
     --unix-socket /var/run/secrets.socket \
     -XGET http://localhost/secrets/bepa
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Spara en hemlighet</term>
                    <listitem>
                    <para>
                        För att spara en hemlighet med typen <quote>application/json</quote>, skicka
en HTTP PUT-begäran med en JSON-last som innehåller typ och värde.  Typen
skall sättas till ”simple” och värdet skall sättas till hemlighetens värde.
Om en hemlighet med det namnet redan finns blir svaret ett 409 HTTP-fel.
                    </para>
                    <para>
                        Typen <quote>application/json</quote> skickar bara hemligheten som
meddelandets last.
                    </para>
                    <para>
                        Följande exempel sparar en hemlighet som heter ”apa” till värdet ”hemligapa”
och en hemlighet som heter ”bepa” till värdet ”hemligbepa” genom att använda
en annan Content Type.  <programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XPUT http://localhost/secrets/apa \
     -d'{"type":"simple","value":"hemligapa"}'
                        </programlisting>
<programlisting>
curl -H "Content-Type: application/octet-stream" \
     --unix-socket /var/run/secrets.socket \
     -XPUT http://localhost/secrets/bepa \
     -d'hemligbepa'
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Att skapa en behållare</term>
                    <listitem>
                    <para>
                        Behållare tillhandahåller en ytterligare namnrymd för denna användarens
hemligheter.  För att skapa en behållare, skicka en HTTP POST-begäran, vars
URI slutar med behållarnamnet.  Observera att URI:n måste sluta med ett
avslutande snedstreck.
                    </para>
                    <para>
                        Följande exempel skapar en behållare som heter ”minbehållare”:<programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XPOST http://localhost/secrets/minbeh%C3%A5llare/
                        </programlisting>
                    </para>
                    <para>
                        För att hantera hemligheter under den här behållaren, nästa bara hemligheter
under behållarsökvägen: <programlisting>
http://localhost/secrets/minbeh%C3%A5llare/minhemlighet
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Radera en hemlighet eller behållare</term>
                    <listitem>
                    <para>
                        För att radera en hemlighet eller behållare, skicka en HTTP DELETE-begäran
med en sökväg till hemligheten eller behållaren.
                    </para>
                    <para>
                        Följande exempel raderar en hemlighet som heter ”apa”:<programlisting>
curl -H "Content-Type: application/json" \
     --unix-socket /var/run/secrets.socket \
     -XDELETE http://localhost/secrets/apa
                        </programlisting>
                    </para>
                    </listitem>
                </varlistentry>
            </variablelist>
    </refsect1>
    <refsect1 id='custodia_example'>
        <title>EXEMPEL PÅ KONFIGURATION AV CUSTODIA- OCH PROXY-LEVERANTÖRER</title>
        <para>
            För att testa proxy-leverantören behöver du sätta upp en Custodia-server att
vidarebefordra begäranden till.  Se till att läsa dokumentationen till
Custdia, konfigurationsdirektiven kan ändras med olika Custidoa-versioner.
        </para>
        <para>
            Denna konfiguration kommer sätta upp en Custodia-server som lyssnar på
http://localhost:8080, tillåter vem som helst med ett huvd med namnet
MITTHEMLIGANAMN satt till minhemliganyckel att kommunicera med
Custodia-servern.  Placera innehållet i en fil (till exempel,
<replaceable>custodia.conf</replaceable>): <programlisting>
[global]
server_version = "Secret/0.0.7"
server_url = http://localhost:8080/
auditlog = /var/log/custodia.log
debug = True

[store:simple]
handler = custodia.store.sqlite.SqliteStore
dburi = /var/lib/custodia.db
table = secrets

[auth:header]
handler = custodia.httpd.authenticators.SimpleHeaderAuth
header = MITTHEMLIGANAMN
value = minhemliganyckel

[authz:paths]
handler = custodia.httpd.authorizers.SimplePathAuthz
paths = /secrets

[/]
handler = custodia.root.Root
store = simple
            </programlisting>
        </para>
        <para>
            Kör sedan kommandot <replaceable>custodia</replaceable> och peka det på
konfigurationsfilen som ett kommandoradsargument.
        </para>
        <para>
            Observera att det för närvarande inte är möjligt att vidarebefordra alla
begäranden globalt till en Custodia-instans.  Istället måste underavsnitt
per användare för användar-ID:n som skall skicka vidare begäranden till
Custodia definieras.  Följande exempel illustrerar en konfiguration där
användaren med AID 123 skulle skicka vidare sina begäranden till Custodia,
men alla andra användares begäranden skulle hanteras av en lokal leverantör.
        </para>
        <programlisting>
[secrets]

[secrets/users/123]
provider = proxy
proxy_url = http://localhost:8080/secrets/
auth_type = header
auth_header_name = MITTHEMLIGANAMN
auth_header_value = minhemliganyckel
        </programlisting>
    </refsect1>
</refentry>
</reference>
